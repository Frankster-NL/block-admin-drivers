{
  "name": "hyperglue",
  "version": "1.1.0",
  "description": "update html elements by mapping query selectors to attributes, text, and hypertext",
  "browser": "browser.js",
  "main": "index.js",
  "dependencies": {
    "trumpet": "~0.4.0",
    "ent": "~0.0.5",
    "concat-stream": "~0.1.1",
    "domify": "~0.2.0",
    "queryselector": "~0.1.0"
  },
  "devDependencies": {
    "tape": "~0.3.3",
    "tap": "~0.4.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "testling": {
    "files": "test/browser/*.js",
    "browsers": [
      "ie8",
      "ie9",
      "ie10",
      "chrome/20",
      "firefox/17",
      "safari/5.1",
      "opera/12"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/hyperglue.git"
  },
  "homepage": "https://github.com/substack/hyperglue",
  "keywords": [
    "browser",
    "html",
    "querySelector"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# hyperglue\n\nupdate html elements by mapping query selectors to attributes, text, and\nhypertext\n\n[![browser support](http://ci.testling.com/substack/hyperglue.png)](http://ci.testling.com/substack/hyperglue)\n\n[![build status](https://secure.travis-ci.org/substack/hyperglue.png)](http://travis-ci.org/substack/hyperglue)\n\nThis module works in both node and the browser.\n\n# example\n\n## in the browser\n\n``` js\nvar hyperglue = require('hyperglue');\nvar fs = require('fs');\nvar html = fs.readFileSync(__dirname + '/article.html');\n\nfunction createArticle (doc) {\n    var name = doc.title.replace(/[^A-Za-z0-9]+/g,'_');\n    return hyperglue(html, {\n        '.title a': {\n            name: name,\n            href: '#' + name,\n            _text: doc.title\n        },\n        '.commit': doc.commit,\n        '.author': doc.author,\n        '.date': doc.date,\n        '.body': { _html: doc.body }\n    });\n}\n\ndocument.body.appendChild(createArticle({\n    file: 'grobot.markdown',\n    author: 'James Halliday',\n    date: 'Mon Dec 24 15:31:27 2012 -0800',\n    title: 'robots are pretty great',\n    commit: '81c62aa62b6770a2f6bdf6865d393daf05930b4a',\n    body: '<h1>robots!</h1>\\n\\n<p>Pretty great basically.</p>'\n}));\n\ndocument.body.appendChild(createArticle({\n    file: 'test.markdown',\n    author: 'James Halliday',\n    date: 'Mon Dec 24 04:31:53 2012 -0800',\n    title: 'testing title',\n    commit: '2a516000d239bbfcf7cdbb4b5acf09486bdf9586',\n    body: '<h1>title text</h1>\\n\\n<p>beep boop.</p>\\n\\n<p><em>rawr</em></p>'\n}));\n```\n\nCompile this code with [browserify](http://browserify.org) and\n[brfs](http://github.com/substack/brfs):\n\n```\n$ npm install -g browserify; npm install brfs\n$ browserify -t brfs browser.js > bundle.js\n```\n\nThen just do:\n\n``` html\n<script src=\"bundle.js\"></script>\n```\n\n## in node\n\n``` js\nvar hyperglue = require('hyperglue');\nvar fs = require('fs');\nvar html = fs.readFileSync(__dirname + '/article.html');\n\nfunction createArticle (doc) {\n    var name = doc.title.replace(/[^A-Za-z0-9]+/g,'_');\n    return hyperglue(html, {\n        '.title a': {\n            name: name,\n            href: '#' + name,\n            _text: doc.title\n        },\n        '.commit': doc.commit,\n        '.author': doc.author,\n        '.date': doc.date,\n        '.body': { _html: doc.body }\n    });\n}\n\nconsole.log(createArticle({\n    file: 'grobot.markdown',\n    author: 'James Halliday',\n    date: 'Mon Dec 24 15:31:27 2012 -0800',\n    title: 'robots are pretty great',\n    commit: '81c62aa62b6770a2f6bdf6865d393daf05930b4a',\n    body: '<h1>robots!</h1>\\n\\n<p>Pretty great basically.</p>'\n}).innerHTML);\n\nconsole.log(createArticle({\n    file: 'test.markdown',\n    author: 'James Halliday',\n    date: 'Mon Dec 24 04:31:53 2012 -0800',\n    title: 'testing title',\n    commit: '2a516000d239bbfcf7cdbb4b5acf09486bdf9586',\n    body: '<h1>title text</h1>\\n\\n<p>beep boop.</p>\\n\\n<p><em>rawr</em></p>'\n}).innerHTML);\n```\n\n## arrays\n\nYou can also duplicate existing elements in order to render arrays of results:\n\n``` js\nvar hyperglue = require('hyperglue');\n\nvar html = [\n    '<div id=\"rows\">',\n    '<div class=\"row\">',\n    '<span class=\"name\"></span>',\n    '<span class=\"message\"></span>',\n    '</div>',\n    '<b>ahoy!</b>',\n    '</div>'\n].join('\\n');\n\nconsole.log(hyperglue(html, {\n    '.row': [\n        { '.name': 'T-REX', '.message': 'RAWR' },\n        { '.name': 'robot', '.message': 'beep boop' },\n        { '.name': 'Dr X', '.message': 'mwahaha' }\n    ]\n}).outerHTML);\n```\n\noutput:\n\n``` html\n<div id=\"rows\">\n<div class=\"row\">\n<span class=\"name\">T-REX</span>\n<span class=\"message\">RAWR</span>\n</div>\n<div class=\"row\">\n<span class=\"name\">robot</span>\n<span class=\"message\">beep boop</span>\n</div>\n<div class=\"row\">\n<span class=\"name\">Dr X</span>\n<span class=\"message\">mwahaha</span>\n</div>\n<b>ahoy!</b>\n</div>\n```\n\n# methods\n\n``` js\nvar hyperglue = require('hyperglue')\n```\n\n## hyperglue(src, updates)\n\nReturn an html element from the source string or element `src` with `updates`\napplied to it.\nIn the browser you get a complete html element. In node you get an object with\nan `innerHTML` property populated with the string contents of the replacement.\n\n`updates` should have [query selectors](http://www.w3.org/TR/CSS2/selector.html)\nas keys and target strings, numbers, or objects as values.\n\nIf the target values in `updates` are strings or numbers, set the inner text\ncontent of the matching elements to that value.\n\nWhen the target values are html elements, replace the inner content at the\nselected element with a clone of the value.\n\nFor target values of arrays, recursively apply `hyperglue(node.cloneNode(),\nvalue)` for each matching element in the array and then remove the original\nnode. This feature makes rendering arrays of content super simple.\n\nIf the target values in `updates` are non-html element objects, update the\nattributes on all matching elements with the keys in the target values. Use\n`'_text'` to set the text content and `'_html'` to set the innerHTML in object\nform. If `'_html'`` is an HTML element, replace the inner content at the\nselector elements with a clone of the `'_html'` value.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install hyperglue\n```\n\n# license\n\nMIT\n\n# kudos\n\nInspried by [plates](https://npmjs.org/package/plates).\n",
  "readmeFilename": "readme.markdown",
  "_id": "hyperglue@1.1.0",
  "_from": "hyperglue@~1.1.0"
}
